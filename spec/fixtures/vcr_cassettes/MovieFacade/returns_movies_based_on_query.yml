---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=fake_api_key&query=Django
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sat, 09 Jul 2022 20:53:12 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 dd759629cc514da7a59a47ab24885b18.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - ORD56-P1
      X-Amz-Cf-Id:
      - qaRu4nibztuRk5n0Pvj0A0N8OkhYtHCat_1G-LpG36xYbB-aIcD7Uw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 09 Jul 2022 20:53:12 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=fake_api_key&page=2&query=Django
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sat, 09 Jul 2022 20:53:12 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 c1388c9ad241eb02cd4ddbe69b1a2d34.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - ORD56-P1
      X-Amz-Cf-Id:
      - nkZwnN4MLP2tkmTgEoH4jIf2WhNFryDWLIkKUpesIfkVtGDL1mzirA==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 09 Jul 2022 20:53:12 GMT
recorded_with: VCR 6.1.0
